package  インターネット制御通知プロトコル

import . "unsafe"
import . "net/ipv4"
import . "util"

//var 단말기 = T단말기{}
/////////////////////////////////////////////////////////////////////////////////////////////
//
//		インターネット制御通知プロトコル = InternetControlMessageProtocol = ICMP
//
/////////////////////////////////////////////////////////////////////////////////////////////
type Tインターネット制御通知プロトコル_メッセージ_緩衝器 struct{
	類型 byte		// type
	コード byte		// code
	
	検査合計 [2]byte	// checksum
	資料 [4] byte		// data
}

var インターネット制御通知プロトコル_大きさ int = 64

type Tインターネット制御通知プロトコル_メッセージ struct{
	類型 uint8		// type
	コード uint8		// code
	
	検査合計 uint16		// checksum
	資料 uint32		// data
}
func (自身 *Tインターネット制御通知プロトコル_メッセージ) M初期化(緩衝器 Tインターネット制御通知プロトコル_メッセージ_緩衝器){
	自身.類型 = 緩衝器.類型
	自身.コード = 緩衝器.コード
	
	自身.検査合計 = Uint16_R(ArrayToUint16(緩衝器.検査合計))
	自身.資料 = Uint32_R(ArrayToUint32(緩衝器.資料))
}

func (自身 *Tインターネット制御通知プロトコル_メッセージ) M緩衝器_設定(緩衝器 *Tインターネット制御通知プロトコル_メッセージ_緩衝器){
	緩衝器.類型 = 自身.類型
	緩衝器.コード = 自身.コード

	緩衝器.検査合計 = Uint16ToArray(自身.検査合計)
	緩衝器.資料 = Uint32ToArray(自身.資料)
}

/////////////////////////////////////////////////////////////////////////////////////////////
type Tインターネット制御通知プロトコル struct{
	Tインターネットプロトコル_處理器
}
func (自身 *Tインターネット制御通知プロトコル) M初期化(後端部 Tインターネットプロトコル_提供者){
	自身.Tインターネットプロトコル_處理器.M初期化(後端部, 自身, 0x01)
}
func (自身 *Tインターネット制御通知プロトコル) Mインターネットプロトコル_受信と同時(srcIP_BE uint32, dstIP_BE uint32, 資料住所 uintptr, 大きさ uint32) bool{
	if 大きさ < uint32(インターネット制御通知プロトコル_大きさ) {
		return false
	}
	/*
	단말기.M출력XY("[len:", 10, 16)
	단말기.M출력(大きさ)
	단말기.M출력("]")
	*/

	var 緩衝器 *Tインターネット制御通知プロトコル_メッセージ_緩衝器 = (*Tインターネット制御通知プロトコル_メッセージ_緩衝器)(Pointer(資料住所))
	var メッセージ Tインターネット制御通知プロトコル_メッセージ = Tインターネット制御通知プロトコル_メッセージ{}
	メッセージ.M初期化(*緩衝器)

	switch メッセージ.類型 {
		case 0:
			break

		case 8:
			メッセージ.類型 = 0
			メッセージ.検査合計 = 0
			メッセージ.M緩衝器_設定(緩衝器)
			メッセージ.検査合計 = 自身.Tインターネットプロトコル_處理器.M提供者を得る().M検査合計((*([4096]uint16))(Pointer(資料住所)), uint32(インターネット制御通知プロトコル_大きさ))
			メッセージ.M緩衝器_設定(緩衝器)
			return true
			break
	}
	return false
}

func (自身 *Tインターネット制御通知プロトコル) M反響信号要求(ip_be uint32) bool{

	var メッセージ Tインターネット制御通知プロトコル_メッセージ = Tインターネット制御通知プロトコル_メッセージ{}
	var 緩衝器 Tインターネット制御通知プロトコル_メッセージ_緩衝器 = Tインターネット制御通知プロトコル_メッセージ_緩衝器{}

	メッセージ.類型 = 8
	メッセージ.コード = 0
	メッセージ.資料 = 0x3713
	メッセージ.検査合計 = 0
	メッセージ.M緩衝器_設定(&緩衝器)
	メッセージ.検査合計 = 自身.Tインターネットプロトコル_處理器.M提供者を得る().M検査合計((*([4096]uint16))(Pointer(&緩衝器)), uint32(インターネット制御通知プロトコル_大きさ))
	メッセージ.M緩衝器_設定(&緩衝器)

	var 資料住所 uintptr = uintptr(Pointer(&緩衝器))
	自身.Tインターネットプロトコル_處理器.Mパケット送信(ip_be, 0x01, 資料住所, uint32(インターネット制御通知プロトコル_大きさ))

	return false
	
}
