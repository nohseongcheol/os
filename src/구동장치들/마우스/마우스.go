/*
	Copyright 2020. (노성철, nsch78@nate.com, nsch@naver.com) All right reserved
*/
package 마우스

import . "unsafe"

import . "port"
import . "interrupt"

type I마우스사건처리기 interface {
        M마우스누른동시(버튼 int8)
        M마우스떼는동시(버튼 int8)
        M마우스움직인동시(x int8, y int8)
}
type T마우스_장치제어기_자료 struct{
	
	함수포인터 func(*T마우스_장치제어기, uint32) uint32

	자료입출력단자 		T바이트입출력단자
	명령어입출력단자 	T바이트입출력단자

	i마우스사건처리기  I마우스사건처리기

	임시버튼값 [3] int8
	요소위치 uint8
	마우스버튼들 int8
}
var 자료 T마우스_장치제어기_자료

type T마우스_장치제어기 struct{
	*T개입중단_처리기
}

var 명령어입출력단자 T바이트입출력단자

func (자신 *T마우스_장치제어기) M초기화(개입중단_관리자 *T개입중단_관리자, 마우스사건처리기 I마우스사건처리기) {

	자료.i마우스사건처리기 = T기본마우스사건처리기{}
	if 마우스사건처리기 != nil {
		자료.i마우스사건처리기 = 마우스사건처리기
	}
	자료.함수포인터 = (*T마우스_장치제어기).개입중단처리
	var 주소 uintptr
	주소 = uintptr(Pointer(&자료.함수포인터))
	자신.T개입중단_처리기.M초기화(0x2C, uintptr(Pointer(개입중단_관리자)), 주소)

	자료.자료입출력단자.M초기화(0x60)
	자료.명령어입출력단자.M초기화(0x64)

	자료.명령어입출력단자.M쓰기(0xA8)
	자료.명령어입출력단자.M쓰기(0x20)

	
	자료.명령어입출력단자.M쓰기(0x60)

	var 상태 uint8
	상태 = (uint8(자료.자료입출력단자.M읽기()) | 2 )
	자료.자료입출력단자.M쓰기(상태) 
	
	자료.명령어입출력단자.M쓰기(0xD4) 
	자료.자료입출력단자.M쓰기(0xF4) 

	자료.자료입출력단자.M읽기()

}

func (자신 *T마우스_장치제어기) 개입중단처리(확장스택포인터 uint32) uint32{

	자료.임시버튼값[자료.요소위치] = (int8)(자료.자료입출력단자.M읽기())
	자료.요소위치 = (자료.요소위치 + 1) % 3

	if 자료.요소위치 == 0{
	
		x := 자료.임시버튼값[1]
		y := 자료.임시버튼값[2]

		자료.i마우스사건처리기.M마우스움직인동시(x, y)

		var i uint8=0
		for i=0 ; i<3 ; i++ {
			if (자료.임시버튼값[0] & (0x1<<i)) != (자료.마우스버튼들 & (0x1<<i)) {
				if (자료.마우스버튼들 & (0x1<<i)) == 0{
					자료.i마우스사건처리기.M마우스누른동시(자료.임시버튼값[0])
				}
			}
		}
		자료.마우스버튼들 = 자료.임시버튼값[0]
		
	}

	return 확장스택포인터
}

